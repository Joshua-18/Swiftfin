name: "Build and Release Swiftfin"

on:
  workflow_dispatch:
    inputs:
      bundle_id:
        description: "Modify the bundle ID (optional)"
        default: "org.jellyfin.swiftfin"
        required: false
        type: string
      app_name:
        description: "Modify the name of the app on the Home Screen (optional)"
        default: "Swiftfin"
        required: false
        type: string
      create_release:
        description: "Create a draft release"
        default: true
        required: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Swiftfin
    runs-on: macos-14
    permissions:
      contents: write

    steps:
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Checkout Main
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Dependencies
        run: |
          brew install ldid dpkg make
          brew install swiftgen
          if [ -f "Cartfile" ]; then
            carthage update --use-xcframeworks --cache-builds
          fi

      - name: Set Xcode Version
        run: sudo xcode-select -s "/Applications/Xcode_15.3.app"

      - name: Build the Project for iOS
        run: |
          xcodebuild clean build \
          -project "Swiftfin.xcodeproj" \
          -scheme "Swiftfin" \
          -configuration Release \
          -sdk iphoneos \
          -derivedDataPath build/ios_derived_data \
          CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO

      - name: Build the Project for tvOS
        run: |
          xcodebuild clean build \
          -project "Swiftfin.xcodeproj" \
          -scheme "Swiftfin" \
          -configuration Release \
          -sdk appletvos \
          -derivedDataPath build/tvos_derived_data \
          CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO

      - name: Create Payload Directory for iOS
        run: mkdir -p build/ios/Payload

      - name: Copy App to Payload for iOS
        run: cp -r build/ios_derived_data/Build/Products/Release-iphoneos/"Swiftfin iOS.app" build/ios/Payload

      - name: Fake Code Sign the App for iOS
        run: ldid -S build/ios/Payload/"Swiftfin iOS.app"/"Swiftfin iOS"

      - name: Package IPA for iOS
        run: |
          cd build/ios
          zip -r Swiftfin.ipa Payload

      - name: Upload IPA for iOS as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Swiftfin-ios-ipa
          path: build/ios/Swiftfin.ipa

      - name: Create Payload Directory for tvOS
        run: mkdir -p build/tvos/Payload

      - name: Copy App to Payload for tvOS
        run: cp -r build/tvos_derived_data/Build/Products/Release-appletvos/"Swiftfin tvOS.app" build/tvos/Payload

      - name: Fake Code Sign the App for tvOS
        run: ldid -S build/tvos/Payload/"Swiftfin tvOS.app"/"Swiftfin tvOS"

      - name: Package IPA for tvOS
        run: |
          cd build/tvos
          zip -r Swiftfin-tvos.ipa Payload

      - name: Upload IPA for tvOS as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Swiftfin-tvos-ipa
          path: build/tvos/Swiftfin-tvos.ipa

      - name: Prepare Release Notes
        run: |
          export TODAY=$(date '+%Y-%m-%d')
          echo "Release for Swiftfin" > release_notes.md
          echo "" >> release_notes.md
          echo "Built on $TODAY" >> release_notes.md

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.sha }}
          name: Release ${{ github.sha }}
          files: build/ios/Swiftfin.ipa,build/tvos/Swiftfin-tvos.ipa
          draft: ${{ inputs.create_release }}
          body_path: release_notes.md
